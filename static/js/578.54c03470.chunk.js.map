{"version":3,"file":"static/js/578.54c03470.chunk.js","mappings":"2QAoBIA,EAASC,EAAAA,GAAW,CACtBC,SAAUD,EAAAA,KAEPE,SAAS,2BACTC,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,QAAQ,6BAA8B,eAEzCC,MAAON,EAAAA,KAEJE,SAAS,wBACTI,MAAM,yBACNH,IAAI,EAAG,wBACPC,IAAI,GAAI,2BAiEb,MA9DA,WACE,IAAMG,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iCAEE,SAACC,EAAA,EAAD,KACA,UAAC,KAAD,YACE,SAAC,KAAD,UAAkB,aAClB,SAAC,KAAD,CACEC,SAXa,SAACC,EAAD,IACnBC,EAD8C,EAAhBA,aAE9BL,GAASM,EAAAA,EAAAA,IAAMF,GAChB,EASOG,iBAAkBf,EAClBgB,cAlBW,CACjBT,MAAO,GACPL,SAAU,IAaN,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAiBe,KAAK,QAAQC,KAAK,QAAQC,YAAY,OACvD,SAAC,KAAD,UAAiB,aACjB,SAAC,KAAD,CAAcD,KAAK,QAAnB,SACG,SAAAE,GAAC,OACA,UAAC,KAAD,YACE,SAAC,MAAD,IACCA,IAHH,QAQN,UAAC,KAAD,YACE,SAAC,KAAD,CACEH,KAAK,WACLC,KAAK,WACLC,YAAY,OAEd,SAAC,KAAD,UAAiB,gBACjB,SAAC,KAAD,CAAcD,KAAK,WAAnB,SACG,SAAAE,GAAC,OACA,UAAC,KAAD,YACE,SAAC,MAAD,IACCA,IAHH,QAQN,SAAC,KAAD,WACE,SAAC,KAAD,CAAqBH,KAAK,SAA1B,SAAmC,wBAQhD,C","sources":["pages/Login/Login.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport {\n  StyledInputAuth,\n  StyledFormAuth,\n  StyledBtnAuthAccent,\n  StyledHeaderAuth,\n  StyledWrapInputAuth,\n  StyledLabelAuth,\n  StyledErrorAuth,\n  // StyledLinkAuth,\n  StyledWrapAuthBtn,\n  AuthWrapComponent,\n} from './Login.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { IoMdAlert } from 'react-icons/io';\nimport GlobalTablet from 'components/GlobalStylePublic/GlobalTablet';\n\nlet schema = yup.object({\n  password: yup\n    .string()\n    .required('Please enter a password')\n    .min(8, 'Min length 8 symbols')\n    .max(32, 'Max length 32 symbols')\n    .matches(/^(?=.*[a-zA-Z])(?=.*[0-9])/, 'a-z and 0-9'),\n\n  email: yup\n    .string()\n    .required('Please enter a email')\n    .email('Enter a correct email')\n    .min(8, 'Min length 8 symbols')\n    .max(32, 'Max length 32 symbols'),\n});\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const startValue = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    dispatch(logIn(values));\n  };\n  return (\n    <>\n\n      <GlobalTablet />\n      <AuthWrapComponent>\n        <StyledHeaderAuth>Sign in</StyledHeaderAuth>\n        <Formik\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n          initialValues={startValue}\n        >\n          <StyledFormAuth>\n            <StyledWrapInputAuth>\n              <StyledInputAuth type=\"email\" name=\"email\" placeholder=\" \" />\n              <StyledLabelAuth>Email *</StyledLabelAuth>\n              <ErrorMessage name=\"email\">\n                {m => (\n                  <StyledErrorAuth>\n                    <IoMdAlert />\n                    {m}\n                  </StyledErrorAuth>\n                )}\n              </ErrorMessage>\n            </StyledWrapInputAuth>\n            <StyledWrapInputAuth>\n              <StyledInputAuth\n                type=\"password\"\n                name=\"password\"\n                placeholder=\" \"\n              />\n              <StyledLabelAuth>Password *</StyledLabelAuth>\n              <ErrorMessage name=\"password\">\n                {m => (\n                  <StyledErrorAuth>\n                    <IoMdAlert />\n                    {m}\n                  </StyledErrorAuth>\n                )}\n              </ErrorMessage>\n            </StyledWrapInputAuth>\n            <StyledWrapAuthBtn>\n              <StyledBtnAuthAccent type=\"submit\">Sign in</StyledBtnAuthAccent>\n              {/* <StyledLinkAuth to=\"/registration\">Register</StyledLinkAuth> */}\n            </StyledWrapAuthBtn>\n          </StyledFormAuth>\n        </Formik>\n      </AuthWrapComponent>\n    </>\n  );\n}\n\nexport default Login;\n"],"names":["schema","yup","password","required","min","max","matches","email","dispatch","useDispatch","GlobalTablet","onSubmit","values","resetForm","logIn","validationSchema","initialValues","type","name","placeholder","m"],"sourceRoot":""}